openapi: 3.0.0
info:
  title: Elefanteca
  version: 0.0.0
paths:
  /api/auth/login/jwt:
    post:
      tags:
        - auth
      description: 'Login com JWT'
      operationId: 7aa2ba8401e13c0f62d8ccaeb57b6b98
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              properties:
                email:
                  type: string
                  example: example@foo.com
                password:
                  type: string
                  example: '19800507'
              type: object
      responses:
        '200':
          description: 'JWT gerado'
  /api/authors:
    post:
      tags:
        - autor
      description: 'Cadastro de usuário'
      operationId: 291d8539d3b5490d46fe9f2ebd84c64c
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              properties:
                name:
                  type: string
                  example: 'Edgar Allan Poe'
              type: object
      responses:
        '200':
          description: 'Autor criado'
      security:
        -
          JWT: []
  '/api/authors/{id}':
    put:
      tags:
        - autor
      description: 'Cadastro de usuário'
      operationId: 2a9f154a4061c0d3257520aba98221a5
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            int:
              summary: 'Id autor'
              value: '1'
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              properties:
                name:
                  type: string
                  example: 'Edgar Allan Poe'
              type: object
      responses:
        '200':
          description: 'Autor criado'
      security:
        -
          JWT: []
  /api/users:
    post:
      tags:
        - usuário
      description: 'Cadastro de usuário'
      operationId: 592819a0265360b2014512d6dbfaf0e7
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              properties:
                name:
                  type: string
                  example: Diego
                cpf:
                  type: string
                  example: '37128197060'
                password:
                  type: string
                  example: '19800507'
                email:
                  type: string
                  example: example@foo.com
              type: object
      responses:
        '200':
          description: 'Usuário criado'
      security:
        -
          JWT: []
components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
externalDocs:
  description: 'Código fonte do projeto'
  url: 'https://github.com/nenitf/elefanteca_api'
